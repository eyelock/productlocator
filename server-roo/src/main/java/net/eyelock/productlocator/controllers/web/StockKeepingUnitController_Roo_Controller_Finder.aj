// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package net.eyelock.productlocator.controllers.web;

import net.eyelock.productlocator.controllers.web.StockKeepingUnitController;
import net.eyelock.productlocator.model.Product;
import net.eyelock.productlocator.model.StockKeepingUnit;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

privileged aspect StockKeepingUnitController_Roo_Controller_Finder {
    
    @RequestMapping(params = { "find=ByActiveNot", "form" }, method = RequestMethod.GET)
    public String StockKeepingUnitController.findStockKeepingUnitsByActiveNotForm(Model uiModel) {
        return "stockkeepingunits/findStockKeepingUnitsByActiveNot";
    }
    
    @RequestMapping(params = "find=ByActiveNot", method = RequestMethod.GET)
    public String StockKeepingUnitController.findStockKeepingUnitsByActiveNot(@RequestParam(value = "active", required = false) Boolean active, Model uiModel) {
        uiModel.addAttribute("stockkeepingunits", StockKeepingUnit.findStockKeepingUnitsByActiveNot(active == null ? Boolean.FALSE : active).getResultList());
        return "stockkeepingunits/list";
    }
    
    @RequestMapping(params = { "find=ByNameEquals", "form" }, method = RequestMethod.GET)
    public String StockKeepingUnitController.findStockKeepingUnitsByNameEqualsForm(Model uiModel) {
        return "stockkeepingunits/findStockKeepingUnitsByNameEquals";
    }
    
    @RequestMapping(params = "find=ByNameEquals", method = RequestMethod.GET)
    public String StockKeepingUnitController.findStockKeepingUnitsByNameEquals(@RequestParam("name") String name, Model uiModel) {
        uiModel.addAttribute("stockkeepingunits", StockKeepingUnit.findStockKeepingUnitsByNameEquals(name).getResultList());
        return "stockkeepingunits/list";
    }
    
    @RequestMapping(params = { "find=ByNameLike", "form" }, method = RequestMethod.GET)
    public String StockKeepingUnitController.findStockKeepingUnitsByNameLikeForm(Model uiModel) {
        return "stockkeepingunits/findStockKeepingUnitsByNameLike";
    }
    
    @RequestMapping(params = "find=ByNameLike", method = RequestMethod.GET)
    public String StockKeepingUnitController.findStockKeepingUnitsByNameLike(@RequestParam("name") String name, Model uiModel) {
        uiModel.addAttribute("stockkeepingunits", StockKeepingUnit.findStockKeepingUnitsByNameLike(name).getResultList());
        return "stockkeepingunits/list";
    }
    
    @RequestMapping(params = { "find=ByPriceBetween", "form" }, method = RequestMethod.GET)
    public String StockKeepingUnitController.findStockKeepingUnitsByPriceBetweenForm(Model uiModel) {
        return "stockkeepingunits/findStockKeepingUnitsByPriceBetween";
    }
    
    @RequestMapping(params = "find=ByPriceBetween", method = RequestMethod.GET)
    public String StockKeepingUnitController.findStockKeepingUnitsByPriceBetween(@RequestParam("minPrice") Float minPrice, @RequestParam("maxPrice") Float maxPrice, Model uiModel) {
        uiModel.addAttribute("stockkeepingunits", StockKeepingUnit.findStockKeepingUnitsByPriceBetween(minPrice, maxPrice).getResultList());
        return "stockkeepingunits/list";
    }
    
    @RequestMapping(params = { "find=ByProduct", "form" }, method = RequestMethod.GET)
    public String StockKeepingUnitController.findStockKeepingUnitsByProductForm(Model uiModel) {
        uiModel.addAttribute("products", Product.findAllProducts());
        return "stockkeepingunits/findStockKeepingUnitsByProduct";
    }
    
    @RequestMapping(params = "find=ByProduct", method = RequestMethod.GET)
    public String StockKeepingUnitController.findStockKeepingUnitsByProduct(@RequestParam("product") Product product, Model uiModel) {
        uiModel.addAttribute("stockkeepingunits", StockKeepingUnit.findStockKeepingUnitsByProduct(product).getResultList());
        return "stockkeepingunits/list";
    }
    
}

// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package net.eyelock.productlocator.controllers.web;

import net.eyelock.productlocator.controllers.web.MediaController;
import net.eyelock.productlocator.model.Media;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

privileged aspect MediaController_Roo_Controller_Finder {
    
    @RequestMapping(params = { "find=findMediaByFileNameEquals", "form" }, method = RequestMethod.GET)
    public String MediaController.findMediaByFileNameEqualsForm(Model uiModel) {
        return "media/findMediaByFileNameEquals";
    }
    
    @RequestMapping(params = "find=findMediaByFileNameEquals", method = RequestMethod.GET)
    public String MediaController.findMediaByFileNameEquals(@RequestParam("fileName") String fileName, Model uiModel) {
        uiModel.addAttribute("mediaitems", Media.findMediaByFileNameEquals(fileName).getResultList());
        return "media/list";
    }
    
    @RequestMapping(params = { "find=findMediaByFileNameLike", "form" }, method = RequestMethod.GET)
    public String MediaController.findMediaByFileNameLikeForm(Model uiModel) {
        return "media/findMediaByFileNameLike";
    }
    
    @RequestMapping(params = "find=findMediaByFileNameLike", method = RequestMethod.GET)
    public String MediaController.findMediaByFileNameLike(@RequestParam("fileName") String fileName, Model uiModel) {
        uiModel.addAttribute("mediaitems", Media.findMediaByFileNameLike(fileName).getResultList());
        return "media/list";
    }
    
    @RequestMapping(params = { "find=findMediaByMimeTypeEquals", "form" }, method = RequestMethod.GET)
    public String MediaController.findMediaByMimeTypeEqualsForm(Model uiModel) {
        return "media/findMediaByMimeTypeEquals";
    }
    
    @RequestMapping(params = "find=findMediaByMimeTypeEquals", method = RequestMethod.GET)
    public String MediaController.findMediaByMimeTypeEquals(@RequestParam("mimeType") String mimeType, Model uiModel) {
        uiModel.addAttribute("mediaitems", Media.findMediaByMimeTypeEquals(mimeType).getResultList());
        return "media/list";
    }
    
    @RequestMapping(params = { "find=findMediaByNameEquals", "form" }, method = RequestMethod.GET)
    public String MediaController.findMediaByNameEqualsForm(Model uiModel) {
        return "media/findMediaByNameEquals";
    }
    
    @RequestMapping(params = "find=findMediaByNameEquals", method = RequestMethod.GET)
    public String MediaController.findMediaByNameEquals(@RequestParam("name") String name, Model uiModel) {
        uiModel.addAttribute("mediaitems", Media.findMediaByNameEquals(name).getResultList());
        return "media/list";
    }
    
    @RequestMapping(params = { "find=findMediaByNameLike", "form" }, method = RequestMethod.GET)
    public String MediaController.findMediaByNameLikeForm(Model uiModel) {
        return "media/findMediaByNameLike";
    }
    
    @RequestMapping(params = "find=findMediaByNameLike", method = RequestMethod.GET)
    public String MediaController.findMediaByNameLike(@RequestParam("name") String name, Model uiModel) {
        uiModel.addAttribute("mediaitems", Media.findMediaByNameLike(name).getResultList());
        return "media/list";
    }
    
    @RequestMapping(params = { "find=findMediaBySizeBetween", "form" }, method = RequestMethod.GET)
    public String MediaController.findMediaBySizeBetweenForm(Model uiModel) {
        return "media/findMediaBySizeBetween";
    }
    
    @RequestMapping(params = "find=findMediaBySizeBetween", method = RequestMethod.GET)
    public String MediaController.findMediaBySizeBetween(@RequestParam("minSize") Long minSize, @RequestParam("maxSize") Long maxSize, Model uiModel) {
        uiModel.addAttribute("mediaitems", Media.findMediaBySizeBetween(minSize, maxSize).getResultList());
        return "media/list";
    }
    
    @RequestMapping(params = { "find=findMediaByUrlEquals", "form" }, method = RequestMethod.GET)
    public String MediaController.findMediaByUrlEqualsForm(Model uiModel) {
        return "media/findMediaByUrlEquals";
    }
    
    @RequestMapping(params = "find=findMediaByUrlEquals", method = RequestMethod.GET)
    public String MediaController.findMediaByUrlEquals(@RequestParam("url") String url, Model uiModel) {
        uiModel.addAttribute("mediaitems", Media.findMediaByUrlEquals(url).getResultList());
        return "media/list";
    }
    
    @RequestMapping(params = { "find=findMediaByUrlLike", "form" }, method = RequestMethod.GET)
    public String MediaController.findMediaByUrlLikeForm(Model uiModel) {
        return "media/findMediaByUrlLike";
    }
    
    @RequestMapping(params = "find=findMediaByUrlLike", method = RequestMethod.GET)
    public String MediaController.findMediaByUrlLike(@RequestParam("url") String url, Model uiModel) {
        uiModel.addAttribute("mediaitems", Media.findMediaByUrlLike(url).getResultList());
        return "media/list";
    }
    
}

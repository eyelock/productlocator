// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package net.eyelock.productlocator.controllers.web;

import net.eyelock.productlocator.controllers.web.ArticleController;
import net.eyelock.productlocator.model.Article;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

privileged aspect ArticleController_Roo_Controller_Finder {
    
    @RequestMapping(params = { "find=ByCodeEquals", "form" }, method = RequestMethod.GET)
    public String ArticleController.findArticlesByCodeEqualsForm(Model uiModel) {
        return "articles/findArticlesByCodeEquals";
    }
    
    @RequestMapping(params = "find=ByCodeEquals", method = RequestMethod.GET)
    public String ArticleController.findArticlesByCodeEquals(@RequestParam("code") String code, Model uiModel) {
        uiModel.addAttribute("articles", Article.findArticlesByCodeEquals(code).getResultList());
        return "articles/list";
    }
    
    @RequestMapping(params = { "find=ByCodeLike", "form" }, method = RequestMethod.GET)
    public String ArticleController.findArticlesByCodeLikeForm(Model uiModel) {
        return "articles/findArticlesByCodeLike";
    }
    
    @RequestMapping(params = "find=ByCodeLike", method = RequestMethod.GET)
    public String ArticleController.findArticlesByCodeLike(@RequestParam("code") String code, Model uiModel) {
        uiModel.addAttribute("articles", Article.findArticlesByCodeLike(code).getResultList());
        return "articles/list";
    }
    
    @RequestMapping(params = { "find=ByListableNot", "form" }, method = RequestMethod.GET)
    public String ArticleController.findArticlesByListableNotForm(Model uiModel) {
        return "articles/findArticlesByListableNot";
    }
    
    @RequestMapping(params = "find=ByListableNot", method = RequestMethod.GET)
    public String ArticleController.findArticlesByListableNot(@RequestParam(value = "listable", required = false) Boolean listable, Model uiModel) {
        uiModel.addAttribute("articles", Article.findArticlesByListableNot(listable == null ? Boolean.FALSE : listable).getResultList());
        return "articles/list";
    }
    
    @RequestMapping(params = { "find=ByNameEquals", "form" }, method = RequestMethod.GET)
    public String ArticleController.findArticlesByNameEqualsForm(Model uiModel) {
        return "articles/findArticlesByNameEquals";
    }
    
    @RequestMapping(params = "find=ByNameEquals", method = RequestMethod.GET)
    public String ArticleController.findArticlesByNameEquals(@RequestParam("name") String name, Model uiModel) {
        uiModel.addAttribute("articles", Article.findArticlesByNameEquals(name).getResultList());
        return "articles/list";
    }
    
}
